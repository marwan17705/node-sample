name: Release Everything
env:
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true
permissions:
  contents: write 
on:
  workflow_dispatch:
    # inputs:
    #   releaseVersion:
    #     description: 'The release version (e.g., 0.21.1)'
    #     required: true
    #     type: string
jobs:
  # print-version:
  #   runs-on: self-hosted
  #   steps:
  #     - name: Show release version
  #       run: echo "Release version is ${{ github.event.inputs.releaseVersion }}"
  Release:
    runs-on: self-hosted
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Set outputs
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - name: Check outputs
        run: echo ${{ steps.vars.outputs.sha_short }}
      # - name: Set RELEASE env var from package.json
      #   run: echo RELEASE=$(node --print "require('./package.json').version") >> $newVersion
      - name: who am i
        run: whoami
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '23' # หรือเวอร์ชันที่คุณต้องการ
      - name: check node version
        run: node -v
      - run: node ./.github/scripts/update-node-sample.js
      - name: Check newVersion is defined
        run: |
          if [ -z "${{ env.newVersion }}" ]; then
            echo "newVersion is not set. Exiting..."
            exit 1
          fi

      - uses: mukunku/tag-exists-action@v1.6.0
        id: check-tag
        with: 
          tag: ${{ env.newVersion }}
      - name: Fail if tag already exists
        if: steps.check-tag.outputs.exists == 'true'
        run: |
          echo "❌ The tag '${{ env.newVersion }}' already exists. Aborting the workflow."
          exit 1
      - name: Release snapshot
        id: release-snapshot
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: ${{ env.newVersion }}
          release_name: ${{ env.newVersion }}
          draft: false
          prerelease: false
      # - name: Show release version
      #   run: echo "Release version is ${{ env.newVersion  }}"
      # - name: Fail if tag already exists
      #   run: '! docker manifest inspect marwan17705/node-sample:${{ env.newVersion  }}'

      # - name: Set up Depot CLI
      #   uses: depot/setup-action@v1
      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v3
      # - name: Login to Docker Hub
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}
      # - name: Build and Push Docker Image
      #   uses: docker/build-push-action@v5
      #   with:
      #     context: .
      #     file: ./Dockerfile
      #     platforms: linux/amd64,linux/arm64
      #     push: true
      #     tags: |
      #       marwan17705/node-sample:latest
      #       marwan17705/node-sample:${{ env.newVersion  }}
      #       marwan17705/node-sample:${{ env.newVersion }}-${{ github.sha }}

      - name: Update version in superapp/package.json
        run: |
          cd superapp
          npm version ${{ env.newVersion }} --no-git-tag-version

      - name: Commit and push updated superapp/package.json
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add superapp/package.json superapp/package-lock.json || true
          git commit -m "chore: update version to ${{ env.newVersion }}"
          git push

# ${{ env.RELEASE }}
      # - name: Login to GitHub Container Registry
      #   uses: docker/login-action@v2
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}

      # - name: Build and push
      #   uses: depot/build-push-action@v1
      #   with:
      #     project: du7O4b0e8P
      #     token: ${{ secrets.DEPOT_PROJECT_TOKEN }}
      #     context: .
      #     file: ./Dockerfile
      #     platforms: |
      #       linux/amd64
      #       linux/arm64
      #     push: true
      #     tags: |
      #       marwan17705/node-sample:${{ env.newVersion  }}
      #       marwan17705/node-sample:latest
      #       ghcr.io/marwan17705/node-sample:${{ env.RELEASE }}
      #       ghcr.io/marwan17705/node-sample:latest
