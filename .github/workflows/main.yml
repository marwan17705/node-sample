# คุณสามารถกำหนดชื่อ workflow ของคุณได้ที่นี่
name: CI

# ่ส่วนนี้คือการกำหนด event trigger เพื่อให้ workflow ทำงาน ซึ่งในตัวอย่าง 
# ผมจะกำหนดว่า ให้ "ทำงาน" ก็ต่อเมื่อ branch `master` มีการเปลี่ยนแปลง
# คุณสามารถเข้าไปดูรายละเอียดเพิ่มเติมได้ที่ https://help.github.com/en/actions/reference/events-that-trigger-workflows
on:
  push:
    branches:
    - main

# ใน jobs นั้น เป็นตัวลำดับการทำงานของ action ต่างที่เรากำหนดขึ้นมา ซึ่งมันจะทำงานเป็นลำดับขั้นตอน 1,2,3... 
# แต่คุณสามารถปรับแต่งเพิ่มเติมเพื่อให้ทำงานในรูปแบบคู่ขนานได้ (matrix)
jobs:
  # [required] อันนี้เป็นชื่อเรียก workflow
  build:
    # [required] จุดนี้เป็นจุดที่ระบุว่า คุณต้องการ run CI บน ubuntu ซึ่งผมเข้าใจว่ามันเป็น shared resources บน Github Action
    # ซึ่งคุณสามารถเลือกใช้ได้ว่า จะใน run based on Ubuntu, Window หรือ MacOS ได้ (แต่ราคาคนละเรื่องเลย)
    runs-on: self-hosted

    # [required] จุดนี้เป็นตัวรวบรวม และกำหนดว่า ใน workflow นี้ เราจะใช้ Action ไหนในการทำให้ workflow นี้สมบูรณ์บ้าง
    steps:
    # [required] อันนี้เป็น Action ที่เรียกได้ว่าเป็นยาสามัญประจำบ้านเลยก็คือ 
    # การบอกให้เครื่อง CI ของเราไป checkout code ล่าสุดบน master branch ออกมาไว้บน workspace ของตัว CI
    - uses: actions/checkout@v2

    # [optional] หลังจากคุณ checkout ใน action แรกสำเร็จแล้ว นี่คือ Action ต่อไป นั้นคือการ print Hello, world ออกมาสู่ terminal ของ CI
    # Tips. ในจุดนี้ หากคุณกำหนด runs-on เป็นแบบ ubuntu หรือ macOS คุณสามารถใช้ shell script ลงไปใน run ได้เลย
    # หรือถ้าหากต้องการกำหนดหลายๆคำสั่ง ใฟห้ใช้ pipe ( | )  เพื่อบอกว่า คุณจะให้ Action นี้ทำงานหลายคำสั่ง 
    - name: Run a one-line script
      run: echo Hello, world!

    # อันนี้เป็ตัวอย่างการใช้ pipe นะครับ
    - name: Run a multi-line script
      run: |
        echo Add other actions to build,
        echo test, and deploy your project.
    
    # รายละเอียดเพิ่มเติมเกี่ยวกับ Context ต่างที่
    # https://help.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions
    - name: Explore the Github Variables
      id: explore-key
      run: |
        echo Github context :: ใช้เพื่อดูรายละเอียดของ workflow ปัจุบัน รวมถึงการดูรายละเอียดเกี่ยวกับ job, enviroment และ key ต่างๆที่กำหนดใน Secret บน Github Secret เช่น
    
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"
      
    - name: Dump job context
      env:
        JOB_CONTEXT: ${{ toJson(job) }}
      run: echo "$JOB_CONTEXT"
      
    - name: Dump steps context
      env:
        STEPS_CONTEXT: ${{ toJson(steps) }}
      run: echo "$STEPS_CONTEXT"
      
    - name: Dump runner context
      env:
        RUNNER_CONTEXT: ${{ toJson(runner) }}
      run: echo "$RUNNER_CONTEXT"
      
    - name: Dump strategy context
      env:
        STRATEGY_CONTEXT: ${{ toJson(strategy) }}
      run: echo "$STRATEGY_CONTEXT"
      
    - name: Dump matrix context
      env:
        MATRIX_CONTEXT: ${{ toJson(matrix) }}
      run: echo "$MATRIX_CONTEXT"
